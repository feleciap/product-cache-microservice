version: "3.8"

services:
  postgres:
    image: postgres:14 
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports: 
      - "5433:5432"
    volumes: 
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis
    ports: 
    - "6379:${REDIS_PORT}"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
    ports: 
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    ports: 
      - "9092:9092"

  django_backend:
    build: ./backend
    command: >
      sh -c "sleep ${DJANGO_DELAY} && python manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes: 
      - ./backend:/app
    ports: 
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - kafka

  fastapi_service:
    build: ./fastapi_service
    command: >
      sh -c "sleep ${FASTAPI_DELAY} && uvicorn main:app --host 0.0.0.0 --port 8001"
    env_file:
      - .env
    volumes: 
      - ./fastapi_service:/app
    ports: 
      - "8001:8001"
    depends_on:
      - kafka
      - redis
      - postgres

volumes:
  postgres_data:
